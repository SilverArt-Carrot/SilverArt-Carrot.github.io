<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Django+jquery实现简单ajax</title>
    <url>/2020/03/10/Django-jquery%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95ajax/</url>
    <content><![CDATA[<p><strong>Ajax</strong>即“Asynchronous Javascript And XML”（异步 JavaScript 和 XML），是指一种创建交互式、快速动态网页应用的网页开发技术，无需重新加载整个网页的情况下，能够更新部分网页的技术。</p>
<p>简单来说，就是用户不用请求整个网页，只向服务器请求JSON数据等等，实现网页的部分更新。</p>
<p>首先我们需要在<strong>view.py</strong>文件中引入<strong>JsonResponse方法</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from django.http import JsonResponse</span><br></pre></td></tr></table></figure>

<p>在试图里定义一个函数来实现返回Json格式的数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def weapons(request, cate_id):</span><br><span class="line">    cate &#x3D; Category.objects.get(pk&#x3D;cate_id)</span><br><span class="line">    weapons_list &#x3D; []</span><br><span class="line">    for weapon in cate.weapon_set.all():</span><br><span class="line">        weapons_list.append(weapon.gun)</span><br><span class="line">    return JsonResponse(&#123;&#39;data&#39;: weapons_list&#125;)</span><br></pre></td></tr></table></figure>

<p>PS:JsonResponse方法内需要传入字典，这里我们从表中获取数据组成字典</p>
<p>在app下的<strong>url.py</strong>文件中配置URL</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">path(&#39;weapons&#x2F;&lt;int:cate_id&gt;&#x2F;&#39;, views.weapons, name&#x3D;&#39;weapons&#39;),</span><br></pre></td></tr></table></figure>

<p>不过,不要忘了在<strong>template</strong>中添加<strong>jquery库</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.staticfile.org&#x2F;jquery&#x2F;1.10.2&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p>最后，我们要用JavaScript实现加载服务端传来的JSON数据</p>
<p>添加方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;li&gt;&lt;button  id&#x3D;&quot;&#123;&#123;wc.id&#125;&#125;&quot; onclick&#x3D;&quot;display_weapons(this)&quot;&gt;&#123;&#123; wc.cate &#125;&#125;&lt;&#x2F;button&gt;&lt;&#x2F;li&gt;&lt;hr&gt;</span><br></pre></td></tr></table></figure>

<p>在我们的js文件中实现HTML中的方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">display_weapons &#x3D; function (e) &#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        type: &#39;get&#39;,</span><br><span class="line">        url: &#39;&#x2F;weapon&#x2F;weapons&#x2F;&#39; + e.id,</span><br><span class="line">        dataType: &#39;json&#39;,</span><br><span class="line">        success: function (data, status) &#123;</span><br><span class="line">            console.log(data);</span><br><span class="line">            var d &#x3D; data[&#39;data&#39;];</span><br><span class="line">            var str &#x3D; &#39;&#39;;</span><br><span class="line">            for (var i &#x3D; 0; i &lt; d.length; i++) &#123;</span><br><span class="line">                str +&#x3D; &#39;&lt;li&gt;&#39; + d[i] + &#39;&lt;&#x2F;li&gt;&#39;</span><br><span class="line">            &#125;</span><br><span class="line">            document.getElementById(&#39;display&#39;).innerHTML &#x3D; str;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Successfully，大功告成了。</p>
]]></content>
  </entry>
  <entry>
    <title>好用的Chrome插件</title>
    <url>/2020/03/09/%E5%A5%BD%E7%94%A8%E7%9A%84Chrome%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<p>没有Chrome插件，仿佛操作系统没有了应用程序一样。</p>
<h3 id="百度药丸"><a href="#百度药丸" class="headerlink" title="百度药丸"></a>百度药丸</h3><p>安装了<strong>百度药丸</strong>Chrome插件，可以屏蔽百度搜索中的一切<strong>垃圾广告</strong></p>
<p><img src="/2020/03/09/%E5%A5%BD%E7%94%A8%E7%9A%84Chrome%E6%8F%92%E4%BB%B6/baidu.PNG" alt="百度药丸"></p>
<h3 id="bilibili哔哩哔哩下载助手"><a href="#bilibili哔哩哔哩下载助手" class="headerlink" title="bilibili哔哩哔哩下载助手"></a>bilibili哔哩哔哩下载助手</h3><p>这款插件可以将B站中<strong>版权受限</strong>的视频下载到本地，只需安装了插件后在<strong>右下角</strong>点击</p>
<p><img src="/2020/03/09/%E5%A5%BD%E7%94%A8%E7%9A%84Chrome%E6%8F%92%E4%BB%B6/bilibili3.PNG" alt></p>
<p>这样我们就可以下载了，视频的清晰度是用户调节的播放清晰度</p>
<p><img src="/2020/03/09/%E5%A5%BD%E7%94%A8%E7%9A%84Chrome%E6%8F%92%E4%BB%B6/bilibili2.PNG" alt></p>
<h3 id="我要看vip视频"><a href="#我要看vip视频" class="headerlink" title="我要看vip视频"></a>我要看vip视频</h3><p>有了<strong>我要看vip视频</strong>，再也不用担心各大视频网站的VIP、SVIP等等限制了，可以在腾讯、优酷、爱奇艺等等使用哦</p>
<p><img src="/2020/03/09/%E5%A5%BD%E7%94%A8%E7%9A%84Chrome%E6%8F%92%E4%BB%B6/vip.PNG" alt="我要看vip视频"></p>
<p>在网页空白处点击右键选择即可</p>
<p><img src="/2020/03/09/%E5%A5%BD%E7%94%A8%E7%9A%84Chrome%E6%8F%92%E4%BB%B6/vip1.PNG" alt></p>
]]></content>
  </entry>
  <entry>
    <title>代码截图工具之Polacode</title>
    <url>/2020/03/08/%E4%BB%A3%E7%A0%81%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7%E4%B9%8BPolacode/</url>
    <content><![CDATA[<p>如何为代码裁出一张漂亮的截图呢，推荐一款vscode的代码截图工具Polacode，首先我们先安装最新版的<strong>Polacode-2019</strong>.</p>
<p><img src="/2020/03/08/%E4%BB%A3%E7%A0%81%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7%E4%B9%8BPolacode/install.png" alt="Polacode-2019"></p>
<p>在代码的编辑区中按下<strong>F1</strong>，这款插件的最大功能在于可以选中我们想要截图的部分，选择<strong>Polacode</strong>按下.</p>
<p><img src="/2020/03/08/%E4%BB%A3%E7%A0%81%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7%E4%B9%8BPolacode/prepare.png" alt></p>
<p>之后弹出截图预览，我们可以选择设置<strong>阴影</strong>，设置<strong>边框透明度</strong>，背景颜色为自己的vscode主题颜色.</p>
<p><img src="/2020/03/08/%E4%BB%A3%E7%A0%81%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7%E4%B9%8BPolacode/doing.png" alt></p>
<p>按下截图按钮，就可以保存自己的截图了.</p>
]]></content>
  </entry>
  <entry>
    <title>Beautify代码整洁之道</title>
    <url>/2020/03/08/Beautify%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93/</url>
    <content><![CDATA[<p>我们都需要整洁美观的代码，推荐一个vscode的代码美化工具，它可以美化Javascript、CSS、HTML、JSON等等。</p>
<p>首先我们在商店中找到<strong>Beautify</strong>,安装它。</p>
<p><img src="/2020/03/08/Beautify%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93/select.PNG" alt="Beautify"></p>
<p>有时，我们得到的代码可能是这个样子的</p>
<p><img src="/2020/03/08/Beautify%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93/before.PNG" alt="未格式化的"></p>
<p>这时，我们只要按下<strong>F1</strong>,选择<strong>Beautify Selection</strong>或者<strong>Beautify file</strong></p>
<p><img src="/2020/03/08/Beautify%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93/doing1.PNG" alt="点击F1"></p>
<p>就可以格式化为漂亮、美观、易读的格式了</p>
<p><img src="/2020/03/08/Beautify%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93/after.PNG" alt="格式化之后的"></p>
]]></content>
  </entry>
  <entry>
    <title>My first blog</title>
    <url>/2020/03/07/My-first-blog/</url>
    <content><![CDATA[<p>开启博客生涯</p>
]]></content>
  </entry>
</search>
