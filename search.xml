<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>10进制转换为各种进制的方法</title>
    <url>/2020/03/13/10%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%90%84%E7%A7%8D%E8%BF%9B%E5%88%B6%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>这个其实不难，想写进制转换主要是遇到了一道字串匹配的算法题，需要KMP算法，先看下题目</p>
<p>给出一个正整数n，我们把1..n在k进制下的表示连起来记为s(n,k)，例如s(16,16)=123456789ABCDEF10, s(5,2)=11011100101。现在对于给定的n和字符串t，我们想知道是否存在一个k(2 ≤ k ≤ 16)，使得t是s(n,k)的子串。</p>
<p><strong>输入描述</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">第一行一个整数n(1 ≤ n ≤ 50,000)。</span><br><span class="line">第二行一个字符串t(长度 ≤ 1,000,000)</span><br></pre></td></tr></table></figure>

<p><strong>输出描述</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;yes&quot;表示存在满足条件的k，否则输出&quot;no&quot;</span><br></pre></td></tr></table></figure>

<p><strong>输入</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">01112</span><br></pre></td></tr></table></figure>

<p><strong>输出</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yes</span><br></pre></td></tr></table></figure>

<p>我的代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">n&#x3D;int(input())</span><br><span class="line">t&#x3D;input()</span><br><span class="line">def get_result(t,n):</span><br><span class="line">    string&#x3D;&#39;&#39;</span><br><span class="line">    string2&#x3D;&#39;&#39;</span><br><span class="line">    l1&#x3D;[&#39;0&#39;,&#39;1&#39;,&#39;2&#39;,&#39;3&#39;,&#39;4&#39;,&#39;5&#39;,&#39;6&#39;,&#39;7&#39;,&#39;8&#39;,&#39;9&#39;,&#39;A&#39;,&#39;B&#39;,&#39;C&#39;,&#39;D&#39;,&#39;E&#39;,&#39;F&#39;]</span><br><span class="line">    for k in range(2,17):</span><br><span class="line">        # 各种进制转换</span><br><span class="line">        for i in range(1,n+1):</span><br><span class="line">            while True:       </span><br><span class="line">                s&#x3D;i%k</span><br><span class="line">                string&#x3D;string+l1[s]</span><br><span class="line">                i&#x3D;i&#x2F;&#x2F;k</span><br><span class="line">                if i&#x3D;&#x3D;0:</span><br><span class="line">                    break</span><br><span class="line">            string&#x3D;string[::-1]</span><br><span class="line">            string2&#x3D;string2+string</span><br><span class="line">            string&#x3D;&#39;&#39;</span><br><span class="line">        if t in string2:</span><br><span class="line">            return &#39;yes&#39;</span><br><span class="line">    return &#39;no&#39;</span><br><span class="line">print(get_result(t,n))</span><br></pre></td></tr></table></figure>

<p>这道题首先需要学会各种进制的转换，思路是<strong>倒取余数</strong>，本来是需要KMP算法的，但是我用来Python字符串的in判断方法，这可能是作弊吧哈哈，<br>所以判题系统给了95分……</p>
<p>KMP算法在之后的博文中会出现的</p>
<p>PS：题目来自牛客网</p>
<p><img src="/2020/03/13/10%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%90%84%E7%A7%8D%E8%BF%9B%E5%88%B6%E7%9A%84%E6%96%B9%E6%B3%95/beauty.jpg" alt></p>
]]></content>
  </entry>
  <entry>
    <title>Captcha Cracker</title>
    <url>/2020/03/11/Captcha-Cracker/</url>
    <content><![CDATA[<h2 id="一道简单的暴力枚举算法题"><a href="#一道简单的暴力枚举算法题" class="headerlink" title="一道简单的暴力枚举算法题"></a>一道简单的暴力枚举算法题</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p><a href="http://www.02469.com（本网页纯属虚构，如有雷同，纯属巧合），是一个资源丰富的教学资源网站，好学的SK同学经常访问这个网站。通常来说，网站为了安全考虑，登录的时候都需要用户输入验证码，这就让SK同学非常不爽了。" target="_blank" rel="noopener">www.02469.com（本网页纯属虚构，如有雷同，纯属巧合），是一个资源丰富的教学资源网站，好学的SK同学经常访问这个网站。通常来说，网站为了安全考虑，登录的时候都需要用户输入验证码，这就让SK同学非常不爽了。</a></p>
<p>SK同学希望你能帮他写一个程序来自动识别验证码的内容，验证码由小写字母和阿拉伯数字组成，你需要识别出其中所有的0,2,4,6,9以及这5个数字对应的英文单词，并按照它们在验证码中出现的顺序以数字形式输出。</p>
<p><strong>输入描述</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">第一行是一个正整数T(≤ 10)，表示测试数据的组数， 每组测试数据只有一行，包含一个长度不超过100000的只由小写字母和阿拉伯数字组成的非空字符串。</span><br></pre></td></tr></table></figure>

<p><strong>输出描述</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">对于每组测试数据，输出一行字符串，表示识别出的验证码。</span><br></pre></td></tr></table></figure>

<p><strong>输入</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">onetwothreefourfiveseven</span><br><span class="line">0two4six6siiiiix</span><br></pre></td></tr></table></figure>

<p><strong>输出</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">24</span><br><span class="line">02466</span><br></pre></td></tr></table></figure>

<p><strong>说明</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0 - zero</span><br><span class="line">2 - two</span><br><span class="line">4 - four</span><br><span class="line">6 - six</span><br><span class="line">9 - nine</span><br></pre></td></tr></table></figure>

<p><strong>我的代码</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">n &#x3D; int(input())</span><br><span class="line">for ii in range(n):</span><br><span class="line">    s &#x3D; input()</span><br><span class="line">    l1 &#x3D; [&#39;0&#39;, &#39;2&#39;, &#39;4&#39;, &#39;6&#39;, &#39;9&#39;]</span><br><span class="line">    l2 &#x3D; [&#39;zero&#39;, &#39;two&#39;, &#39;four&#39;, &#39;six&#39;, &#39;nine&#39;]</span><br><span class="line">    j &#x3D; 0</span><br><span class="line">    while j &lt; len(s):</span><br><span class="line">        if s[j] in l1:</span><br><span class="line">            print(s[j], end&#x3D;&#39;&#39;)</span><br><span class="line">            j &#x3D; j + 1</span><br><span class="line">        elif s[j:j + 3] in l2:</span><br><span class="line">            print(l1[l2.index(s[j:j + 3])], end&#x3D;&#39;&#39;)</span><br><span class="line">            j &#x3D; j + 3</span><br><span class="line">        elif s[j:j + 4] in l2:</span><br><span class="line">            print(l1[l2.index(s[j:j + 4])], end&#x3D;&#39;&#39;)</span><br><span class="line">            j &#x3D; j + 4</span><br><span class="line">        else:</span><br><span class="line">            j +&#x3D; 1</span><br><span class="line">    print()</span><br></pre></td></tr></table></figure>

<p>总的来说，这是一道简单的题目，我第一次写出来的时候是得到了正确答案，但是我的代码太冗杂，有多余的变量声明，<br>以及多余的循环语句和判断语句，导致测试时花费了太多时间和不必要的内存。</p>
<p>Python不像C、C++那样快速，但是Python有列表，这样就非常方便了，而且语言简洁，书写方便。</p>
<p><strong>在别人的代码里看到了正则表达式</strong>，这确实是在字符串匹配中高效的方法。</p>
<p>PS：题目来自牛客网</p>
]]></content>
  </entry>
  <entry>
    <title>你为啥在游戏里花怎么长时间</title>
    <url>/2020/03/11/%E4%BD%A0%E4%B8%BA%E5%95%A5%E5%9C%A8%E6%B8%B8%E6%88%8F%E9%87%8C%E8%8A%B1%E6%80%8E%E4%B9%88%E9%95%BF%E6%97%B6%E9%97%B4/</url>
    <content><![CDATA[<p>为啥要在游戏里花大把时间，是什么吸引了我们，相比一些小游戏，它可以起到缓解压力、舒心的效果，但是我们不会花大把时间<br>去玩。但为什么有些游戏，我们会拼命爆肝呢？</p>
<p>这里我们那<strong>忍者必须死3</strong>来举例，虽是一个酷跑游戏，但在爆肝方面却做的淋漓尽致</p>
<p><img src="/2020/03/11/%E4%BD%A0%E4%B8%BA%E5%95%A5%E5%9C%A8%E6%B8%B8%E6%88%8F%E9%87%8C%E8%8A%B1%E6%80%8E%E4%B9%88%E9%95%BF%E6%97%B6%E9%97%B4/renzhe.png" alt="忍者必须死3"></p>
<p>探究一下这位征服全球的<strong>东方神秘酷跑</strong></p>
<p><strong>艺术性</strong>：融合了中国水墨风和动漫风格</p>
<p><strong>竞技性</strong>：拥有竞技性是游戏长存的动力</p>
<p><strong>剧情丰富</strong>：忍3确实剧情还可以</p>
<p><strong>玩法新颖</strong>：这跟绳子，懂得都懂，不多说了</p>
<p><strong>随机奖励</strong>：这就是你爆肝的原因嘛？为了得到更好的奖励，除了氪，就是肝，任何一个爆肝的游戏，都少不了<strong>奖励期望</strong></p>
<p><strong>玩家联系</strong>：让玩家觉得，你不是一个人在玩，<strong>工会</strong>，<strong>战斗</strong>，<strong>家族</strong>等等都是这方面的体现</p>
<p><strong>等级排行</strong>：拥有比其他玩家更高的等级，更高的排名，这也是玩家愿意花时间的原因</p>
<p><strong>活动丰富</strong>：经常发布活动，在活动中有更好的奖励，只要玩家参与活动，就少不了他花时间，圈他钱是早晚的事</p>
<hr>
<p>当然，这只是众多游戏中的一个栗子</p>
<p>比竞技性，不可能比得过大火的LOL，CSGO，DOTA2，OverWatch等电子竞技类游戏</p>
<p><img src="/2020/03/11/%E4%BD%A0%E4%B8%BA%E5%95%A5%E5%9C%A8%E6%B8%B8%E6%88%8F%E9%87%8C%E8%8A%B1%E6%80%8E%E4%B9%88%E9%95%BF%E6%97%B6%E9%97%B4/csgo_time.PNG" alt="csgo"></p>
<p>比艺术性，也比不过Gris</p>
<p><img src="/2020/03/11/%E4%BD%A0%E4%B8%BA%E5%95%A5%E5%9C%A8%E6%B8%B8%E6%88%8F%E9%87%8C%E8%8A%B1%E6%80%8E%E4%B9%88%E9%95%BF%E6%97%B6%E9%97%B4/gris.PNG" alt="gris"></p>
<p>比剧情当然不敌各大3A大作</p>
<p><img src="/2020/03/11/%E4%BD%A0%E4%B8%BA%E5%95%A5%E5%9C%A8%E6%B8%B8%E6%88%8F%E9%87%8C%E8%8A%B1%E6%80%8E%E4%B9%88%E9%95%BF%E6%97%B6%E9%97%B4/Tomb_Raider.PNG" alt="古墓丽影10"></p>
<p><img src="/2020/03/11/%E4%BD%A0%E4%B8%BA%E5%95%A5%E5%9C%A8%E6%B8%B8%E6%88%8F%E9%87%8C%E8%8A%B1%E6%80%8E%E4%B9%88%E9%95%BF%E6%97%B6%E9%97%B4/witcher_time.PNG" alt="witcher"></p>
<p>但比上爆肝界的元老，<strong>Warframe</strong>天下第一</p>
<p>我自己也是一个500小时以上的萌新了</p>
<p><img src="/2020/03/11/%E4%BD%A0%E4%B8%BA%E5%95%A5%E5%9C%A8%E6%B8%B8%E6%88%8F%E9%87%8C%E8%8A%B1%E6%80%8E%E4%B9%88%E9%95%BF%E6%97%B6%E9%97%B4/warframe_time.PNG" alt></p>
<p>warframe并非并非一款竞技性游戏，也有玩家对战的PVP模式，但是不受玩家好评</p>
<p>warframe有了除竞技性的一切爆肝特性</p>
<p><strong>BUT</strong></p>
<p>独特的这三个特性却是其他游戏少有的</p>
<h3 id="更新频繁"><a href="#更新频繁" class="headerlink" title="更新频繁"></a>更新频繁</h3><p>DE工作室有几百人的团队，频繁的更新是阻止玩家流失的关键</p>
<h3 id="创造性"><a href="#创造性" class="headerlink" title="创造性"></a>创造性</h3><p>可以任凭零部件打造自己的装备，自己的伙伴</p>
<p><img src="/2020/03/11/%E4%BD%A0%E4%B8%BA%E5%95%A5%E5%9C%A8%E6%B8%B8%E6%88%8F%E9%87%8C%E8%8A%B1%E6%80%8E%E4%B9%88%E9%95%BF%E6%97%B6%E9%97%B4/warframe3.jpg" alt></p>
<h3 id="开放世界"><a href="#开放世界" class="headerlink" title="开放世界"></a>开放世界</h3><p>warframe里的每一张地图都很大，在加上地球的夜灵平野，金星的某世界（我忘了名字了！淦！），在加上新出的空战，如此高的自由度，让所有玩家爱不释手。</p>
<p><img src="/2020/03/11/%E4%BD%A0%E4%B8%BA%E5%95%A5%E5%9C%A8%E6%B8%B8%E6%88%8F%E9%87%8C%E8%8A%B1%E6%80%8E%E4%B9%88%E9%95%BF%E6%97%B6%E9%97%B4/warframe2.jpg" alt></p>
<h3 id="养成"><a href="#养成" class="headerlink" title="养成"></a>养成</h3><p>这TMD是重点啊啊啊…….在Warframe中每款武器，每款战甲，每款饰品，每只宠物都可以有自定义的配色方案，为了搭配一套酷炫的配色我可以玩一年，在地图中可以看风景，可以挖矿，可以钓鱼，总之可玩性非常多。</p>
<p><img src="/2020/03/11/%E4%BD%A0%E4%B8%BA%E5%95%A5%E5%9C%A8%E6%B8%B8%E6%88%8F%E9%87%8C%E8%8A%B1%E6%80%8E%E4%B9%88%E9%95%BF%E6%97%B6%E9%97%B4/warframe.jpg" alt></p>
]]></content>
  </entry>
  <entry>
    <title>论梦想</title>
    <url>/2020/03/11/%E8%AE%BA%E6%A2%A6%E6%83%B3/</url>
    <content><![CDATA[<p><strong>梦想？</strong></p>
<p><strong>什么是梦想？</strong></p>
<p><strong>是什么滋生了梦想？</strong></p>
<p>是儿时仰望天空时飞机的尾线？是太阳系八大行星的轮回？是龙蛇盘踞般的城市立交桥？</p>
<p><img src="/2020/03/11/%E8%AE%BA%E6%A2%A6%E6%83%B3/plane.jpg" alt></p>
<p>前些日子，在蓝色星球里，讲到了珊瑚礁，那里生活着一种鱼，以食贝壳里的肉为生，鱼的名字我已忘了。每当他用嘴拾起扇贝，他需要砸开扇贝才能吃到里面的肉，他来到坚硬的岩石边，用嘴拾起扇贝砸向岩石，落下，再次拾起，再来一遍，如此反复，也许是一小时，两小时，或者一天，才能吃到。他要包餐一顿是如此的不容易，是什么让他一直坚持下去，显而易见，是生存的欲望。他有梦想吗？他只是为了生计如此奔波。</p>
<p><img src="/2020/03/11/%E8%AE%BA%E6%A2%A6%E6%83%B3/fish.png" alt="砸贝壳的鱼"></p>
<p>当有人问：你看看这些小动物，如此的坚持，再看看你。但是想想，我们和动物一样吗？他们的欲望是为了生存，为了繁衍后代，我们的欲望难道跟他们一样吗？</p>
<p>欲望无处不在，以前听过一句话，人的年龄取决于欲望，而不是时间。当你看见美食想吃，这是食欲；当你幻想女人石更，这是性欲；当你想了解一个知识时，这是求知欲；当你想比别人过的好比别人成功，这是攀比欲。形形色色的欲望充斥着生命，我们是被欲望支配的生物，只是欲望给我们的动力或小或大。</p>
<p>从小父母、老师就告诉我们要有梦想，但对我来说，梦想是如此的虚无缥缈，人们真的都有梦想吗？没有梦想会过的一塌糊涂？未必，梦想是另一种东西的实质…<br>.<br><br>.<br><br>.<br><br>.<br><br>.<br><br>.<br><br>.<br><br>.<br></p>
<h3 id="欲望"><a href="#欲望" class="headerlink" title="欲望"></a>欲望</h3><h3 id="推动人类前进的，是无穷无尽的欲望"><a href="#推动人类前进的，是无穷无尽的欲望" class="headerlink" title="推动人类前进的，是无穷无尽的欲望."></a>推动人类前进的，是无穷无尽的欲望.</h3><p><img src="/2020/03/11/%E8%AE%BA%E6%A2%A6%E6%83%B3/desire.jpg" alt></p>
]]></content>
  </entry>
  <entry>
    <title>Django+jquery实现简单ajax</title>
    <url>/2020/03/10/Django-jquery%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95ajax/</url>
    <content><![CDATA[<p><strong>Ajax</strong>即“Asynchronous Javascript And XML”（异步 JavaScript 和 XML），是指一种创建交互式、快速动态网页应用的网页开发技术，无需重新加载整个网页的情况下，能够更新部分网页的技术。</p>
<p>简单来说，就是用户不用请求整个网页，只向服务器请求JSON数据等等，实现网页的部分更新。</p>
<p>首先我们需要在<strong>view.py</strong>文件中引入<strong>JsonResponse方法</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from django.http import JsonResponse</span><br></pre></td></tr></table></figure>

<p>在试图里定义一个函数来实现返回Json格式的数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def weapons(request, cate_id):</span><br><span class="line">    cate &#x3D; Category.objects.get(pk&#x3D;cate_id)</span><br><span class="line">    weapons_list &#x3D; []</span><br><span class="line">    for weapon in cate.weapon_set.all():</span><br><span class="line">        weapons_list.append(weapon.gun)</span><br><span class="line">    return JsonResponse(&#123;&#39;data&#39;: weapons_list&#125;)</span><br></pre></td></tr></table></figure>

<p>PS: JsonResponse方法内需要传入字典，这里我们从表中获取数据组成字典</p>
<p>在app下的<strong>url.py</strong>文件中配置URL</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">path(&#39;weapons&#x2F;&lt;int:cate_id&gt;&#x2F;&#39;, views.weapons, name&#x3D;&#39;weapons&#39;),</span><br></pre></td></tr></table></figure>

<p>不过,不要忘了在<strong>template</strong>中添加<strong>jquery库</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.staticfile.org&#x2F;jquery&#x2F;1.10.2&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p>最后，我们要用JavaScript实现加载服务端传来的JSON数据</p>
<p>添加方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;li&gt;&lt;button  id&#x3D;&quot;&#123;&#123;wc.id&#125;&#125;&quot; onclick&#x3D;&quot;display_weapons(this)&quot;&gt;&#123;&#123; wc.cate &#125;&#125;&lt;&#x2F;button&gt;&lt;&#x2F;li&gt;&lt;hr&gt;</span><br></pre></td></tr></table></figure>

<p>在我们的js文件中实现HTML中的方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">display_weapons &#x3D; function (e) &#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        type: &#39;get&#39;,</span><br><span class="line">        url: &#39;&#x2F;weapon&#x2F;weapons&#x2F;&#39; + e.id,</span><br><span class="line">        dataType: &#39;json&#39;,</span><br><span class="line">        success: function (data, status) &#123;</span><br><span class="line">            console.log(data);</span><br><span class="line">            var d &#x3D; data[&#39;data&#39;];</span><br><span class="line">            var str &#x3D; &#39;&#39;;</span><br><span class="line">            for (var i &#x3D; 0; i &lt; d.length; i++) &#123;</span><br><span class="line">                str +&#x3D; &#39;&lt;li&gt;&#39; + d[i] + &#39;&lt;&#x2F;li&gt;&#39;</span><br><span class="line">            &#125;</span><br><span class="line">            document.getElementById(&#39;display&#39;).innerHTML &#x3D; str;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Successfully，大功告成了。</p>
]]></content>
  </entry>
  <entry>
    <title>好用的Chrome插件</title>
    <url>/2020/03/09/%E5%A5%BD%E7%94%A8%E7%9A%84Chrome%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<p>没有Chrome插件，仿佛操作系统没有了应用程序一样。</p>
<h3 id="百度药丸"><a href="#百度药丸" class="headerlink" title="百度药丸"></a>百度药丸</h3><p>安装了<strong>百度药丸</strong>Chrome插件，可以屏蔽百度搜索中的一切<strong>垃圾广告</strong></p>
<p><img src="/2020/03/09/%E5%A5%BD%E7%94%A8%E7%9A%84Chrome%E6%8F%92%E4%BB%B6/baidu.PNG" alt="百度药丸"></p>
<h3 id="bilibili哔哩哔哩下载助手"><a href="#bilibili哔哩哔哩下载助手" class="headerlink" title="bilibili哔哩哔哩下载助手"></a>bilibili哔哩哔哩下载助手</h3><p>这款插件可以将B站中<strong>版权受限</strong>的视频下载到本地，只需安装了插件后在<strong>右下角</strong>点击</p>
<p><img src="/2020/03/09/%E5%A5%BD%E7%94%A8%E7%9A%84Chrome%E6%8F%92%E4%BB%B6/bilibili3.PNG" alt></p>
<p>这样我们就可以下载了，视频的清晰度是用户调节的播放清晰度</p>
<p><img src="/2020/03/09/%E5%A5%BD%E7%94%A8%E7%9A%84Chrome%E6%8F%92%E4%BB%B6/bilibili2.png" alt></p>
<h3 id="我要看vip视频"><a href="#我要看vip视频" class="headerlink" title="我要看vip视频"></a>我要看vip视频</h3><p>有了<strong>我要看vip视频</strong>，再也不用担心各大视频网站的VIP、SVIP等等限制了，可以在腾讯、优酷、爱奇艺等等使用哦</p>
<p><img src="/2020/03/09/%E5%A5%BD%E7%94%A8%E7%9A%84Chrome%E6%8F%92%E4%BB%B6/vip.png" alt="我要看vip视频"></p>
<p>在网页空白处点击右键选择即可</p>
<p><img src="/2020/03/09/%E5%A5%BD%E7%94%A8%E7%9A%84Chrome%E6%8F%92%E4%BB%B6/vip1.png" alt></p>
]]></content>
  </entry>
  <entry>
    <title>代码截图工具之Polacode</title>
    <url>/2020/03/08/%E4%BB%A3%E7%A0%81%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7%E4%B9%8BPolacode/</url>
    <content><![CDATA[<p>如何为代码裁出一张漂亮的截图呢，推荐一款vscode的代码截图工具Polacode，首先我们先安装最新版的<strong>Polacode-2019</strong>.</p>
<p><img src="/2020/03/08/%E4%BB%A3%E7%A0%81%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7%E4%B9%8BPolacode/install.png" alt="Polacode-2019"></p>
<p>在代码的编辑区中按下<strong>F1</strong>，这款插件的最大功能在于可以选中我们想要截图的部分，选择<strong>Polacode</strong>按下.</p>
<p><img src="/2020/03/08/%E4%BB%A3%E7%A0%81%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7%E4%B9%8BPolacode/prepare.png" alt></p>
<p>之后弹出截图预览，我们可以选择设置<strong>阴影</strong>，设置<strong>边框透明度</strong>，背景颜色为自己的vscode主题颜色.</p>
<p><img src="/2020/03/08/%E4%BB%A3%E7%A0%81%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7%E4%B9%8BPolacode/doing.png" alt></p>
<p>按下截图按钮，就可以保存自己的截图了.</p>
]]></content>
  </entry>
  <entry>
    <title>Beautify代码整洁之道</title>
    <url>/2020/03/08/Beautify%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93/</url>
    <content><![CDATA[<p>我们都需要整洁美观的代码，推荐一个vscode的代码美化工具，它可以美化Javascript、CSS、HTML、JSON等等。</p>
<p>首先我们在商店中找到<strong>Beautify</strong>,安装它。</p>
<p><img src="/2020/03/08/Beautify%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93/select.PNG" alt="Beautify"></p>
<p>有时，我们得到的代码可能是这个样子的</p>
<p><img src="/2020/03/08/Beautify%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93/before.PNG" alt="未格式化的"></p>
<p>这时，我们只要按下<strong>F1</strong>,选择<strong>Beautify Selection</strong>或者<strong>Beautify file</strong></p>
<p><img src="/2020/03/08/Beautify%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93/doing1.PNG" alt="点击F1"></p>
<p>就可以格式化为漂亮、美观、易读的格式了</p>
<p><img src="/2020/03/08/Beautify%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93/after.PNG" alt="格式化之后的"></p>
]]></content>
  </entry>
</search>
